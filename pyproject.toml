[tool.poetry]
name = "meltanolabs-tap-snowflake"
version = "0.0.0"
description = "`tap-snowflake` is a Singer tap for Snowflake, built with the Meltano SDK for Singer Taps."
readme = "README.md"
authors = ["Meltano Team <hello@meltano.com>"]
keywords = [
    "ELT",
    "Snowflake",
]
license = "Apache 2.0"
packages = [
    { include = "tap_snowflake" },
]

[tool.poetry.dependencies]
python = ">=3.9"
requests = "^2.25.1"
singer-sdk = "~=0.39.1"
snowflake-sqlalchemy = "1.6.1"
snowflake-connector-python = { version = ">=3.12.1,<3.14.0", extras = ["secure-local-storage"] }
sqlalchemy = "~=2.0.34"
cryptography = ">=3.4.6,<44.0.0"

[tool.poetry.group.dev.dependencies]
mypy = "^0.991"
singer-sdk = {extras = ["testing"], version = "*"}
tox = "^3.24.4"
types-requests = "^2.26.1"
ruff = "^0.6.7"

[tool.isort]
profile = "black"
multi_line_output = 3 # Vertical Hanging Indent
src_paths = "tap_snowflake"

[tool.ruff]
line-length = 88
src = ["target_snowflake"]
target-version = "py38"

[tool.ruff.lint]
ignore = [
    "ANN001",
    "ANN401",
    "S608",
    "SLF001",
    "EM101",
]
select = ["ALL"]

[tool.ruff.format]
quote-style = "double"
exclude = ["*.pyi"]

[tool.ruff.lint.isort]
known-first-party = ["target_snowflake"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 10

[build-system]
requires = ["poetry-core==2.1.1", "poetry-dynamic-versioning==1.7.1"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry.scripts]
# CLI declaration
tap-snowflake = "tap_snowflake.tap:TapSnowflake.cli"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
